/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import controlador.MetodosHistorial;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Javier Sánchez Gonzalez
 */
public class Historial extends javax.swing.JPanel {

    /**
     * Variables historial
     */
    private int idUsuarioHistorial;
    private String matriculaHistorial;
    double totalPrecio = 0.0;

    /**
     * Creates new form RegistroCuenta
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /**
     * Creates new form RegistroCuenta
     */
    public Historial() {
        initComponents();

        // Poner jTexfield y jBotton el radio
        jbmostrar.putClientProperty("FlatLaf.style", "arc: 15");
        jbcancelar.putClientProperty("FlatLaf.style", "arc: 15");
        jlhistorial.putClientProperty("Flatlaf.styleClass", "");
        jlHistorialVehiculo.putClientProperty("FlatLaf.styleClass", "h0");
        jlMatricula.putClientProperty("FlatLaf.styleClass", "h0");
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHistorial = new vista.PanelRound();
        jlhistorial = new javax.swing.JLabel();
        jbmostrar = new javax.swing.JButton();
        jbcancelar = new javax.swing.JButton();
        jlHistorialVehiculo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtablaHistorial = new javax.swing.JTable();
        jlMatricula = new javax.swing.JLabel();

        setMaximumSize(null);
        setPreferredSize(new java.awt.Dimension(428, 800));

        panelHistorial.setBackground(new java.awt.Color(249, 251, 255));
        panelHistorial.setMaximumSize(null);
        panelHistorial.setPreferredSize(new java.awt.Dimension(428, 800));
        panelHistorial.setRoundBottomLeft(30);
        panelHistorial.setRoundBottomRight(30);

        jlhistorial.setFont(new java.awt.Font("Stencil", 0, 20)); // NOI18N
        jlhistorial.setForeground(new java.awt.Color(39, 59, 244));
        jlhistorial.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlhistorial.setText("HISTORIAL APARCAMIENTO");
        jlhistorial.setPreferredSize(new java.awt.Dimension(273, 30));

        jbmostrar.setBackground(new java.awt.Color(43, 220, 61));
        jbmostrar.setFont(new java.awt.Font("Lucida Sans", 1, 16)); // NOI18N
        jbmostrar.setForeground(new java.awt.Color(255, 255, 255));
        jbmostrar.setText("Mostrar");
        jbmostrar.setToolTipText("Muestra el historial por nombre o por matricula");
        jbmostrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbmostrar.setPreferredSize(new java.awt.Dimension(124, 49));
        jbmostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbmostrarActionPerformed(evt);
            }
        });

        jbcancelar.setBackground(new java.awt.Color(255, 3, 3));
        jbcancelar.setFont(new java.awt.Font("Lucida Sans", 1, 16)); // NOI18N
        jbcancelar.setForeground(new java.awt.Color(255, 255, 255));
        jbcancelar.setText("Cancelar");
        jbcancelar.setToolTipText("Boton cancela operacion y regresa a la pantalla anterior");
        jbcancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbcancelar.setPreferredSize(new java.awt.Dimension(124, 49));
        jbcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbcancelarActionPerformed(evt);
            }
        });

        jlHistorialVehiculo.setFont(new java.awt.Font("Lucida Sans", 0, 20)); // NOI18N
        jlHistorialVehiculo.setForeground(new java.awt.Color(25, 35, 66));
        jlHistorialVehiculo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlHistorialVehiculo.setText("Historial vehiculo ");
        jlHistorialVehiculo.setPreferredSize(new java.awt.Dimension(273, 30));

        jtablaHistorial.setBackground(new java.awt.Color(198, 212, 255));
        jtablaHistorial.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jtablaHistorial.setForeground(new java.awt.Color(0, 0, 0));
        jtablaHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtablaHistorial);

        jlMatricula.setFont(new java.awt.Font("Stencil", 0, 20)); // NOI18N
        jlMatricula.setForeground(new java.awt.Color(39, 59, 244));
        jlMatricula.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlMatricula.setPreferredSize(new java.awt.Dimension(273, 30));

        javax.swing.GroupLayout panelHistorialLayout = new javax.swing.GroupLayout(panelHistorial);
        panelHistorial.setLayout(panelHistorialLayout);
        panelHistorialLayout.setHorizontalGroup(
            panelHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHistorialLayout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jlhistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelHistorialLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(panelHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelHistorialLayout.createSequentialGroup()
                        .addGroup(panelHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlHistorialVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                                .addComponent(jbcancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbmostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelHistorialLayout.setVerticalGroup(
            panelHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHistorialLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jlhistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlHistorialVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jbmostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jbcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelHistorial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    /**
     *
     * @param evt Metodo buscarMatricula var matricula = se pasa al metodo y nos
     * devuelve un arrayList del historial
     */


    private void jbmostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbmostrarActionPerformed

        System.out.println("Buscar listado de historial para el usuario con ID: " + 43);

        // Obtener la lista de historiales desde MetodosHistorial
        List<modelo.Historial> historia = MetodosHistorial.buscarMatriculaUsuario(43);

        // Limpiar la tabla antes de añadir nuevos datos
        DefaultTableModel model = (DefaultTableModel) jtablaHistorial.getModel();
        model.setRowCount(0); // Limpiar la tabla

        if (historia != null && !historia.isEmpty()) {
            // Títulos de las columnas para el historial
            String[] columnTitles = {"Año-Mes-Día", "Duración(m)", "Precio(€)"};
            model.setColumnIdentifiers(columnTitles); // Establecer títulos de columnas

            // Añadir las filas con los datos del historial
            for (modelo.Historial his : historia) {
                Double precio = (his.getPrecio() != null) ? his.getPrecio() : 0.0; // Asignar 0.0 si el precio es nulo
                model.addRow(new Object[]{his.getDia(), his.getTiempoReservado(), precio});
                totalPrecio += precio; // Sumar al total

            }

            // Añadir una fila al final para el total
            model.addRow(new Object[]{"", "", "Total: " + totalPrecio, "€"});

            // Centrar el contenido de las celdas
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
            for (int i = 0; i < jtablaHistorial.getColumnCount(); i++) {
                jtablaHistorial.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
            }else {
            JOptionPane.showMessageDialog(null, "No hay registros en el historial.", "Historial", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jbmostrarActionPerformed

    /**
         * Evento si al introducir los datos son erroneos, al cancelar vuelven a
         * incilizarse los campos
         */
    private void jbcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbcancelarActionPerformed

        // Crea una instancia de InicioCuenta
        InicioCuenta ic = new InicioCuenta();
        // Muestra la ventana InicioCuenta
        mostrarPanel(ic);

    }//GEN-LAST:event_jbcancelarActionPerformed

    /**
     * Metodo se le pasa el panel IncioCuenta para que elmine el actual y
     * muestre este.
     *
     * @param panel
     */
    private void mostrarPanel(InicioCuenta panel) {
        panel.setSize(428, 800);
        panel.setLocation(0, 0);

        panelHistorial.removeAll();
        panelHistorial.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        panelHistorial.revalidate();
        panelHistorial.repaint();

    }

    // Método para inicializar datos del usuario
    void inicializarDatosUsuario(String nombre, int idUsuario) {
        this.idUsuarioHistorial = idUsuario;

        // Obtener matrícula asociada al usuario
        this.matriculaHistorial = MetodosHistorial.buscarMatricula(idUsuario);

        System.out.println("Id usuario pasada: " + nombre + ", ID: " + idUsuario);
        System.out.println("Matrícula obtenida: " + this.matriculaHistorial);

        if (this.matriculaHistorial != null && !this.matriculaHistorial.isEmpty()) {
            jlMatricula.setText("Matrícula: " + this.matriculaHistorial);
        } else {
            jlMatricula.setText("Matrícula no encontrada");
            System.out.println("No se encontró matrícula para el ID: " + idUsuario);
        }
    }

    /**
     * Metodo crean la variables para que al leer el archivo de texto traducido
     * lo identifique
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbcancelar;
    private javax.swing.JButton jbmostrar;
    private javax.swing.JLabel jlHistorialVehiculo;
    private javax.swing.JLabel jlMatricula;
    private javax.swing.JLabel jlhistorial;
    private javax.swing.JTable jtablaHistorial;
    private vista.PanelRound panelHistorial;
    // End of variables declaration//GEN-END:variables

}
